name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: HTXApp/Dockerfile
        push: true
        tags: zlightningzap/htx-assignment:latest

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Clean up existing kubectl
      run: |
        sudo rm -f /usr/local/bin/kubectl || true

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin
        echo "kubectl version:"
        /usr/local/bin/kubectl version --client

    - name: Update kubeconfig
      run: |
        aws eks --region ap-southeast-1 update-kubeconfig --name HTXAssignment
        
    - name: Replace API_KEY placeholder with actual secret
      run: |
        sed -i 's/<API_KEY_PLACEHOLDER>/'"${{ secrets.API_KEY }}"'/g' HTXApp/k8s/secrets.yaml
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f HTXApp/k8s/configmap.yaml || { echo "Failed to apply configmap"; exit 1; }
        kubectl apply -f HTXApp/k8s/secrets.yaml || { echo "Failed to apply secrets"; exit 1; }
        kubectl apply -f HTXApp/k8s/deployment.yaml || { echo "Failed to apply deployment"; exit 1; }
        kubectl apply -f HTXApp/k8s/service.yaml || { echo "Failed to apply deployment"; exit 1; }

    - name: Check Pod Status
      run: |
        kubectl get pods || { echo "Failed to get pods"; exit 1; }
